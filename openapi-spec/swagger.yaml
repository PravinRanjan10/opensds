openapi: 3.0.1
info:
  title: OpenSDS Controller API
  description: OpenSDS Controller API to manage mutliple backend storages.
  termsOfService: https://www.linuxfoundation.org/terms
  contact:
    name: OpenSDS Support
    url: https://opensds.slack.com
    email: support@opensds.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1beta
externalDocs:
  description: The offical OpenSDS Controller API specification
  url: https://github.com/opensds/opensds
servers:
- url: https://localhost:50040/
- url: http://localhost:50040/
security:
- basicAuth: []
paths:
  /:
    get:
      tags:
      - API versions
      description: Lists information for all SDSController API versions.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/VersionSpec'
              example:
              - name: v1beta
                status: CURRENT
                updated: 2017-07-10T14:36:58.014Z
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /{apiVersion}:
    get:
      tags:
      - API versions
      description: Gets version details by specified API version.
      parameters:
      - name: apiVersion
        in: path
        description: API version string
        required: true
        schema:
          pattern: v([1-9][0-9]*)((alpha)([1-9][0-9]*)|(beta)([1-9][0-9]*))?
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: '#/components/schemas/VersionSpec'
              example:
                name: v1beta
                status: SUPPORTED
                updated: 2017-04-10T14:36:58.014Z
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/docks:
    get:
      tags:
      - Dock
      description: Lists information for all storage docks.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DockSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/docks/{dockId}:
    get:
      tags:
      - Dock
      description: Gets storage dock detail by dock ID.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: dockId
        in: path
        description: The UUID of the storage backend (dock) service.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/pools:
    get:
      tags:
      - Pool
      description: Lists information for all block storage pool.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of query results on multiple pages
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: offset
        in: query
        description: Start position of the pagination query
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: sortKey
        in: query
        description: Sorting keyword, which can be sorted based on the number of initiators
        schema:
          type: string
          enum:
          - size
          - status
          - availabilityZone
      - name: sortDir
        in: query
        description: Asending or descending
        schema:
          type: string
          enum:
          - asc
          - des
      - name: name
        in: query
        description: Pool name([A-Za-z-0-9_-])
        schema:
          minLength: 1
          maxLength: 255
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePoolSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/availabilityZones:
    get:
      tags:
      - Availability Zone
      description: Lists availability zones.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/pools/{poolId}:
    get:
      tags:
      - Pool
      description: Gets storage pool detail by pool ID.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: poolId
        in: path
        description: The UUID of the storage pool.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePoolSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/profiles:
    get:
      tags:
      - Profiles
      description: Lists information for all profiles.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of query results on multiple pages
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: offset
        in: query
        description: Start position of the pagination query
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: storageType
        in: query
        description: Sorting keyword, based on storage type
        schema:
          type: string
          enum:
          - block
          - file
          - object
      - name: sortDir
        in: query
        description: Ascending or descending by name
        schema:
          type: string
          enum:
          - asc
          - des
      - name: name
        in: query
        description: The pattern of profile name ([A-Za-z-0-9_-])
        schema:
          minLength: 1
          maxLength: 255
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileRespSpec'
              example:
              - id: 5d8c3732-a248-50ed-bebc-539a6ffd25c1
                name: Gold
                description: provide gold storage service
                storageType: block
                provisioningProperties:
                  dataStorage:
                    recoveryTimeObjective: 10
                    provisioningPolicy: Thin
                    IsSpaceEfficient: true
                  ioConnectivity:
                    accessProtocol: iscsi
                    maxIOPS: 100000
                    maxBWS: 60000
                replicationProperties:
                  dataProtection:
                    isIsolated: true
                    minLifetime: P3Y6M4DT12H30M5S
                    recoveryGeographicObjective: Datacenter
                    recoveryPointObjectiveTime: P3Y6M4DT12H30M5S
                    RecoveryTimeObjective: OnlineActive
                    replicaType: Clone
                  replicaInfos:
                    replicaUpdateMode: Active
                    consistencyEnabled: true
                    replicationPeriod: P3Y6M4DT12H30M5S
                    replicationBandwidth: 60000
                snapshotProperties:
                  schedule:
                    datetime: 2008-09-15T15:53:00
                    occurrence: Weekly
                  retention:
                    number: 10
                    duration: 60
                  topology:
                    bucket: s3
                customProperties:
                  key1: value1
                  key2:
                    subKey1: subValue1
                    subKey2: subValue2
                  key3: value3
              - id: 5d8c3732-a248-50ed-bebc-539a6ffd25c2
                name: Silver
                description: provide silver storage service
                provisioningProperties:
                  dataStorage:
                    provisioningPolicy: Thin
                  ioConnectivity:
                    accessProtocol: iscsi
                customProperties:
                  key1: value1
                  key2: value2
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Profiles
      description: Creates a profile.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileReqSpec'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileRespSpec'
              example:
                id: 5d8c3732-a248-50ed-bebc-539a6ffd25c2
                name: Silver
                description: provide silver storage service
                provisioningProperties:
                  dataStorage:
                    provisioningPolicy: Thin
                  ioConnectivity:
                    accessProtocol: iscsi
                customProperties:
                  key1: value1
                  key2: value2
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/profiles/{profileId}:
    get:
      tags:
      - Profiles
      description: Gets profile detail by profile ID.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: profileId
        in: path
        description: The UUID of the profile.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileRespSpec'
              example:
                id: 5d8c3732-a248-50ed-bebc-539a6ffd25c2
                name: Silver
                description: provide silver storage service
                provisioningProperties:
                  dataStorage:
                    provisioningPolicy: Thin
                  ioConnectivity:
                    accessProtocol: iscsi
                customProperties:
                  key1: value1
                  key2: value2
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Profiles
      description: Updates a profile.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: profileId
        in: path
        description: The UUID of the profile.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  minLength: 1
                  maxLength: 255
                  pattern: '[A-Za-z0-9_-]'
                  type: string
                  description: The name to be modified
                  example: newProfile
                description:
                  description: The description to be modified
                  type: string
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileRespSpec'
              example:
                id: 5d8c3732-a248-50ed-bebc-539a6ffd25c2
                name: Silver
                description: provide silver storage service
                provisioningProperties:
                  dataStorage:
                    provisioningPolicy: Thin
                  ioConnectivity:
                    accessProtocol: iscsi
                customProperties:
                  key1: value1
                  key2: value2
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - Profiles
      description: Deletes a profile.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: profileId
        in: path
        description: The UUID of the profile.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/profiles/{profileId}/customeProperties:
    get:
      tags:
      - Profiles
      description: Lists all customized properties for the profile.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: profileId
        in: path
        description: The UUID of the profile.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPropertiesSpec'
              example:
                key1: value1
                key2:
                  subKey1: subValue1
                  subKey2: subValue2
                key3: value3
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Profiles
      description: Adds customized property to the profile.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: profileId
        in: path
        description: The UUID of the profile.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPropertiesSpec'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPropertiesSpec'
              example:
                key1: value1
                key2:
                  subKey1: subValue1
                  subKey2: subValue2
                key3: value3
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/profiles/{profileId}/customProperties/{customKey}:
    delete:
      tags:
      - Profiles
      description: Remove a customized property from profile.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: profileId
        in: path
        description: The UUID of the profile.
        required: true
        schema:
          type: string
      - name: customKey
        in: path
        description: The key of the customized properties.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/volumes:
    get:
      tags:
      - Block volumes
      description: Lists information for all volumes.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of query results on multiple pages
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: offset
        in: query
        description: Start position of the pagination query
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: sortKey
        in: query
        description: Sorting keyword, which can be sorted based on the number of initiators
        schema:
          type: string
          enum:
          - size
          - status
          - availabilityZone
      - name: sortDir
        in: query
        description: Asending or descending
        schema:
          type: string
          enum:
          - asc
          - des
      - name: name
        in: query
        description: The pattern of Volume name([A-Za-z-0-9_-])
        schema:
          minLength: 1
          maxLength: 255
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Block volumes
      description: Creates a volume.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeReqSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeRespSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/volumes/{volumeId}:
    get:
      tags:
      - Block volumes
      description: Gets volume detail by volume id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The UUID of the volume.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Block volumes
      description: Updates a volume.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The UUID of the volume.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  minLength: 1
                  maxLength: 255
                  pattern: '[A-Za-z0-9_-]'
                  type: string
                  description: The name to be modified
                  example: volume1
                description:
                  type: string
                  description: The description to be modified
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - Block volumes
      description: Deletes a volume.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The UUID of the volume.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/volumes/{volumeId}/resize:
    post:
      tags:
      - Block volumes
      description: Extends a volume.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The UUID of the volume.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendVolumeSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/attachments:
    get:
      tags:
      - Block volume attachments
      description: Lists information for all volume attachments.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeId
        in: query
        description: The UUID of the volume assosicated with the attachment.
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeAttachmentRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Block volume attachments
      description: Creates a volume attachment.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeAttachmentReqSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  attachment:
                    $ref: '#/components/schemas/VolumeAttachmentRespSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/attachments/{attachmentId}:
    get:
      tags:
      - Block volume attachments
      description: Gets volume attachment detail by attachment id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: attachmentId
        in: path
        description: The UUID of the volume attachment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachmentRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Block volume attachments
      description: Updates a volume attachments
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: attachmentId
        in: path
        description: The UUID of the volume attachment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeAttachmentReqSpec'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachmentRespSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - Block volume attachments
      description: Deletes a volume attachment.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: attachmentId
        in: path
        description: The UUID of the volume attachment.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/snapshots:
    get:
      tags:
      - Block volume snapshots
      description: Lists information for all volume snapshots.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeId
        in: query
        description: The UUID of the volume assosicated with the snapshot.
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeSnapshotSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Block volume snapshots
      description: Creates a volume snapshot.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshotSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/snapshots/{snapshotId}:
    get:
      tags:
      - Block volume snapshots
      description: Gets snapshot detail by volume snapshot id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: snapshotId
        in: path
        description: The UUID of the volume snapshot.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Block volume snapshots
      description: Updates a volume snapshot.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: snapshotId
        in: path
        description: The UUID of the volume snapshot.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - Block volume snapshots
      description: Deletes a volume snapshot.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: snapshotId
        in: path
        description: The UUID of the volume snapshot.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/volumeGroups:
    get:
      tags:
      - Block volume group
      description: Lists information for all volume groups.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeGroupSpec'
              example:
              - id: 015184f3-8e73-47fd-8f57-26ea912e2a6b
                name: volumeGroup-demo
                status: available
                description: volumeGroup test
                profiles:
                - 993c87dc-1928-498b-9767-9da8f901d6ce
                - 90d667f0-e9a9-427c-8a7f-cc714217c7bd
                availabilityZone: default
                poolId: 6e14588f-9da9-5ef3-a89d-86375c1352f6
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Block volume group
      description: Creates a volume group.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroupSpec'
        required: true
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupSpec'
              example:
              - id: 015184f3-8e73-47fd-8f57-26ea912e2a6b
                name: volumeGroup-demo
                status: creating
                description: volumeGroup test
                profiles:
                - 993c87dc-1928-498b-9767-9da8f901d6ce
                - 90d667f0-e9a9-427c-8a7f-cc714217c7bd
                availabilityZone: default
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/volumeGroups/{volumeGroupId}:
    get:
      tags:
      - Block volume group
      description: Gets volume group detail by volume group id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeGroupId
        in: path
        description: The UUID of the volume group.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupSpec'
              example:
                id: 015184f3-8e73-47fd-8f57-26ea912e2a6b
                createdAt: 2018-06-03T07:02:35.389Z
                name: volumeGroup-demo
                status: available
                description: volumeGroup test
                profiles:
                - 993c87dc-1928-498b-9767-9da8f901d6ce
                - 90d667f0-e9a9-427c-8a7f-cc714217c7bd
                availabilityZone: default
                poolId: 6e14588f-9da9-5ef3-a89d-86375c1352f6
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Block volume group
      description: Updates a volume group.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeGroupId
        in: path
        description: The UUID of the volume group.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: volumeGroup-demo
                description:
                  type: string
                  example: volumeGroup test
                addVolumes:
                  type: array
                  items:
                    type: string
                    example: ""
                removeVolumes:
                  type: array
                  items:
                    type: string
                    example: 1b7277b8-493a-4c8d-bccd-89db580e5f60
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - Block volume group
      description: Deletes a volume group.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: volumeGroupId
        in: path
        description: The UUID of the volume group.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/replications:
    get:
      tags:
      - Block Replications
      description: Lists information for all replications.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReplicationSpec'
              example:
              - id: e416db95-b6f4-4669-a075-5a873d050a93
                name: replication-demo
                ReplicationStatus: enabled
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Block Replications
      description: Create a replication.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationSpec'
              example:
                id: e416db95-b6f4-4669-a075-5a873d050a93
                createdAt: 2018-05-07T07:02:35.389Z
                name: replication-demo
                description: volume replication demo
                availabilityZone: default
                primaryVolumeId: 655ec3e2-5840-4138-b5bd-bce930d2acda
                secondaryVolumeId: 8cfa9839-7fb8-4b16-ae7a-5eb7f2dafd0b
                primaryReplicationDriverData:
                  AttachmentId: 0a1bb216-3096-4be0-a392-5124937717b7
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:baec258b-8f79-4bbc-bf97-28addfa903d3-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-baec258b-8f79-4bbc-bf97-28addfa903d3
                secondaryReplicationDriverData:
                  AttachmentId: b3e1d639-66f4-486c-9be9-217b7ac05ac3
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:1f782f63-21cd-4475-9dcb-e2cc0eae7546-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-1f782f63-21cd-4475-9dcb-e2cc0eae7546
                ReplicationStatus: enabled
                replicationMode: sync
                replicationPeriod: 0
                profileId: fb210bfe-8809-4a8f-aaf2-53acd98e28ac
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/replications/{replicationId}:
    get:
      tags:
      - Block Replications
      description: Gets replication detail by replication id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: replicationId
        in: path
        description: The UUID of the relication.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationSpec'
              example:
                id: e416db95-b6f4-4669-a075-5a873d050a93
                createdAt: 2018-05-07T07:02:35.389Z
                name: replication-demo
                description: volume replication demo
                availabilityZone: default
                primaryVolumeId: 655ec3e2-5840-4138-b5bd-bce930d2acda
                secondaryVolumeId: 8cfa9839-7fb8-4b16-ae7a-5eb7f2dafd0b
                primaryReplicationDriverData:
                  AttachmentId: 0a1bb216-3096-4be0-a392-5124937717b7
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:baec258b-8f79-4bbc-bf97-28addfa903d3-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-baec258b-8f79-4bbc-bf97-28addfa903d3
                secondaryReplicationDriverData:
                  AttachmentId: b3e1d639-66f4-486c-9be9-217b7ac05ac3
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:1f782f63-21cd-4475-9dcb-e2cc0eae7546-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-1f782f63-21cd-4475-9dcb-e2cc0eae7546
                ReplicationStatus: enabled
                replicationMode: sync
                replicationPeriod: 0
                profileId: fb210bfe-8809-4a8f-aaf2-53acd98e28ac
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Block Replications
      description: Updates a replication.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: replicationId
        in: path
        description: The UUID of the relication.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationSpec'
              example:
                id: e416db95-b6f4-4669-a075-5a873d050a93
                createdAt: 2018-05-07T07:02:35.389Z
                name: replication-demo
                description: volume replication demo
                availabilityZone: default
                primaryVolumeId: 655ec3e2-5840-4138-b5bd-bce930d2acda
                secondaryVolumeId: 8cfa9839-7fb8-4b16-ae7a-5eb7f2dafd0b
                primaryReplicationDriverData:
                  AttachmentId: 0a1bb216-3096-4be0-a392-5124937717b7
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:baec258b-8f79-4bbc-bf97-28addfa903d3-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-baec258b-8f79-4bbc-bf97-28addfa903d3
                secondaryReplicationDriverData:
                  AttachmentId: b3e1d639-66f4-486c-9be9-217b7ac05ac3
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:1f782f63-21cd-4475-9dcb-e2cc0eae7546-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-1f782f63-21cd-4475-9dcb-e2cc0eae7546
                ReplicationStatus: enabled
                replicationMode: sync
                replicationPeriod: 0
                profileId: fb210bfe-8809-4a8f-aaf2-53acd98e28ac
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - Block Replications
      description: Deletes a replication.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: replicationId
        in: path
        description: The UUID of the relication.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/replications/detail:
    get:
      tags:
      - Block Replications
      description: Lists detail information for all replications.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReplicationSpec'
              example:
              - id: e416db95-b6f4-4669-a075-5a873d050a93
                createdAt: 2018-05-07T07:02:35.389Z
                name: replication-demo
                description: volume replication demo
                availabilityZone: default
                primaryVolumeId: 655ec3e2-5840-4138-b5bd-bce930d2acda
                secondaryVolumeId: 8cfa9839-7fb8-4b16-ae7a-5eb7f2dafd0b
                primaryReplicationDriverData:
                  AttachmentId: 0a1bb216-3096-4be0-a392-5124937717b7
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:baec258b-8f79-4bbc-bf97-28addfa903d3-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-baec258b-8f79-4bbc-bf97-28addfa903d3
                secondaryReplicationDriverData:
                  AttachmentId: b3e1d639-66f4-486c-9be9-217b7ac05ac3
                  HostIp: 192.168.56.100
                  HostName: opensds-master
                  Mountpoint: /dev/disk/by-path/ip-192.168.56.100:3260-iscsi-iqn.2017-10.io.opensds:1f782f63-21cd-4475-9dcb-e2cc0eae7546-lun-1
                  lvPath: /dev/opensds-volumes-default/volume-1f782f63-21cd-4475-9dcb-e2cc0eae7546
                ReplicationStatus: enabled
                replicationMode: sync
                replicationPeriod: 0
                profileId: fb210bfe-8809-4a8f-aaf2-53acd98e28ac
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/replications/{replicationId}/enable:
    post:
      tags:
      - Block Replications
      description: Enable Replication.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: replicationId
        in: path
        description: The UUID of the relication.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationSpec'
        required: false
      responses:
        202:
          description: Accepted
          content: {}
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/replications/{replicationId}/disable:
    post:
      tags:
      - Block Replications
      description: Disable Replication.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: replicationId
        in: path
        description: The UUID of the relication.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationSpec'
        required: false
      responses:
        202:
          description: Accepted
          content: {}
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/block/replications/{replicationId}/failover:
    post:
      tags:
      - Block Replications
      description: Failover Replication.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: replicationId
        in: path
        description: The UUID of the relication.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverReplicationSpec'
        required: false
      responses:
        202:
          description: Accepted
          content: {}
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/file/shares:
    get:
      tags:
      - File Shares
      description: Lists information for all file shares.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileShareSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - File Shares
      description: Creates a file share.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShareSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/file/shares/{fileshareId}:
    get:
      tags:
      - File Shares
      description: Gets fileshare detail by fileshare id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: fileshareId
        in: path
        description: The UUID of the file share.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - File Shares
      description: Updates a file share.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: fileshareId
        in: path
        description: The UUID of the file share.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - File Shares
      description: Deletes a fileshare.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: fileshareId
        in: path
        description: The UUID of the file share.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/file/snapshots:
    get:
      tags:
      - File Share Snapshots
      description: Lists information for all file share spanshots.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileShareSnapshotSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - File Share Snapshots
      description: Creates a file share snapshot.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShareSnapshotSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareSnapshotSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/file/snapshots/{shareSnapshotId}:
    get:
      tags:
      - File Share Snapshots
      description: Gets fileshare snapshot details by fileshare id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: shareSnapshotId
        in: path
        description: The UUID of the fileshare snapshot.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareSnapshotSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - File Share Snapshots
      description: Updates a file share Snapshot.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: shareSnapshotId
        in: path
        description: The UUID of the fileshare snapshot.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareSnapshotSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - File Share Snapshots
      description: Deletes a fileshare snapshot.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: shareSnapshotId
        in: path
        description: The UUID of the fileshare snapshot.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/file/acls:
    get:
      tags:
      - File Share Acls
      description: Lists information for all file share acls.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileShareAclSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - File Share Acls
      description: Creates a file share acl.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShareAclSpec'
        required: false
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareAclSpec'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/file/acls/{fileshareaclId}:
    get:
      tags:
      - File Share Acls
      description: Gets fileshareacl detail by fileshareacl id.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: fileshareaclId
        in: path
        description: The UUID of the file share acl.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareAclSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    delete:
      tags:
      - File Share Acls
      description: Deletes a fileshareacl.
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: fileshareaclId
        in: path
        description: The UUID of the file share acl.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
  /v1beta/{tenantId}/host/hosts:
    get:
      tags:
      - Host
      description: Lists host information.
      operationId: getHosts
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of query results on multiple pages
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: start
        in: query
        description: Start position of the pagination query
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: sortKey
        in: query
        description: Sorting keyword, which can be sorted based on the number of initiators
        schema:
          type: string
          enum:
          - initiatorCount
          - volumeCount
      - name: sortDir
        in: query
        description: Ascending or descending by size
        schema:
          type: string
          enum:
          - asc
          - des
      - name: name
        in: query
        description: Host name
        schema:
          minLength: 1
          maxLength: 255
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HostRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Host
      description: Creates host.
      operationId: postHosts
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        description: Create host args
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostReqSpec'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostRespSpec'
  /v1beta/{tenantId}/host/{hostId}:
    get:
      tags:
      - Host
      description: Get details about the host
      operationId: getHostId
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: hostId
        in: path
        description: The UUID of the host.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Host
      description: Modify host details
      operationId: putHost
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: hostId
        in: path
        description: The UUID of the host.
        required: true
        schema:
          type: string
      requestBody:
        description: Modify host args
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostReqSpec'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostRespSpec'
    delete:
      tags:
      - Host
      description: Removes host
      operationId: deleteHost
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: hostId
        in: path
        description: The UUID of the host.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
  /v1beta/{tenantId}/host/hostgroups:
    get:
      tags:
      - Host
      description: Lists host groups information.
      operationId: getHostgroups
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of query results on multiple pages
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: start
        in: query
        description: Start position of the pagination query
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: sortKey
        in: query
        description: Sorting keyword, which can be sorted based on the number of initiators
        schema:
          type: string
          enum:
          - initiatorCount
          - volumeCount
      - name: sortDir
        in: query
        description: Asending or descending
        schema:
          type: string
          enum:
          - asc
          - des
      - name: hostId
        in: query
        description: Host Id
        schema:
          minLength: 1
          maxLength: 255
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HostGroupRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    post:
      tags:
      - Host
      description: Creates hostgroup.
      operationId: postHostgroups
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      requestBody:
        description: Create hostgroup args
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostGroupReqSpec'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupRespSpec'
  /v1beta/{tenantId}/host/hostgroups/{hostgroupId}:
    get:
      tags:
      - Host
      description: Get details about the hostgroup
      operationId: getHostGroupId
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: hostgroupId
        in: path
        description: The UUID of the hostgroup.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of query results on multiple pages
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: start
        in: query
        description: Start position of the pagination query
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: sortKey
        in: query
        description: Sorting keyword, which can be sorted based on the number of initiators
        schema:
          type: string
          enum:
          - initiatorCount
          - volumeCount
      - name: sortDir
        in: query
        description: Asending or descending
        schema:
          type: string
          enum:
          - asc
          - des
      - name: name
        in: query
        description: Host name
        schema:
          minLength: 1
          maxLength: 255
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupRespSpec'
        401:
          description: NotAuthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        404:
          description: The resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSpec'
    put:
      tags:
      - Host
      description: Modify hostgroup details
      operationId: putHostGroup
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: hostgroupId
        in: path
        description: The UUID of the hostgroup.
        required: true
        schema:
          type: string
      requestBody:
        description: List of hosts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostGroupReqSpec'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupRespSpec'
    delete:
      tags:
      - Host
      description: Removes hostgroup
      operationId: deleteHostgroup
      parameters:
      - name: tenantId
        in: path
        description: The tenant UUID in a multi-tenancy environment.
        required: true
        schema:
          type: string
      - name: hostgroupId
        in: path
        description: The UUID of the hostgroup.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
components:
  schemas:
    BaseModel:
      type: object
      properties:
        id:
          type: string
          description: The UUID of the object
          example: 084bf71e-a102-11e7-88a8-e31fe6d52248
        createdAt:
          example: "2019-09-07T07:02:35.389"
          type: string
          format: date-time
        updatedAt:
          example: "2019-09-07T07:02:35.389"
          type: string
          format: date-time
    DataStorageLoS:
      type: object
      properties:
        recoveryTimeObjective:
          example: 10
          description: Recovery Time Objective(RTO) is a maximum acceptable time within which storage must be restored after disaster. For e.g 10 sec.
          type: integer
          format: int64
        provisioningPolicy:
          default: thick
          description: The provisioning policy of the pool. It can be thick or thin.
          type: string
          enum:
          - Thin
          - Thick
        compression:
          description: The optimization policy to remove redundant data within the file
          default: false
          type: boolean
        deduplication:
          description: The optimization policy to remove redundant data or file on the storage
          default: false
          type: boolean
        characterCodeSet:
          description: The code set to store the data
          example: ASCII
          type: string
        maxFileNameLengthBytes:
          description: The maximum filename length in bytes
          example: 255
          type: integer
          format: int64
        storageAccessCapability:
          description: The type of access capability. This can be set of read,write or execute.
          example: Read
          type: string
          enum:
          - Read
          - Write
          - Execute
      description: DataStorageLoS can be used to describe a service option covering
        storage provisioning and availability.
    IOConnectivityLoS:
      required:
      - accessProtocol
      type: object
      properties:
        accessProtocol:
          description: The type of access protocol. This can be iscsi, rbd, fibreChannel, or DSWare(Data Service Middleware)
          example: iscsi
          type: string
          enum:
          - iscsi
          - rbd
          - fibreChannel
          - DSWare
        maxIOPS:
          example: 150
          description: The maximum IOPS(Input/Output Operations Per Second) supported by storage. For e.g. 150IOPS
          type: integer
          format: int64
        minIOPS:
          example: 50
          description: The minimum IOPS(Input/Output Operations Per Second) supported by storage.In otherwords, performance can not dropped below this level. For e.g. 50IOPS
          type: integer
          format: int64
        maxBWS:
          description: The maximum bandwidth suported by storage. For e.g. 5mbps
          example: 5
          type: integer
          format: int64
        minBWS:
          description: The minimum bandwidth suported by storage. In otherwords, performance can not dropped below this level. For e.g. 1mbps
          example: 1
          type: integer
          format: int64
        latency:
          description: The latency of the storage in ns(nanosec.). For e.g. 1ns
          example: 1
          type: integer
          format: int64
      description: IOConnectivityLoS can be used to specify the characteristics of storage connectivity.
    DataProtectionLoS:
      type: object
      properties:
        isIsolated:
          default: false
          example: true
          description: Isolated storage is designed to prevent data corruption and data loss
          type: boolean
        minLifetime:
          description: It is an ISO 8601 duration that specifies the minimum lifetime required for the replica
          type: string
          example: P3Y6M4DT12H30M5S
        RecoveryGeographicObjective:
          description: It is supported failure domain from where data can be restored after disaster
          example: datacenter
          type: string
          enum:
          - Datacenter
          - Rack
          - RackGroup
          - Region
          - Row
          - Server
        RecoveryPointObjectiveTime:
          description: It's an ISO 8601 time interval that specifies the maximum source information that may be lost on failure. In the case of isIsolated = false, failure of the domain is not considered.
          type: string
          example: P3Y6M4DT12H30M5S
        RecoveryTimeObjective:
          description: It specifies the relative time required to make a replica available as a source
          example: offline
          type: string
          enum:
          - OnlineActive
          - OnlinePassive
          - Nearline
          - Offline
        ReplicaType:
          description: The value specify the type of repilca
          example: snapshot
          type: string
          enum:
          - Clone
          - Mirror
          - Snapshot
          - TokenizedClone
      description: DataProtectionLoS describes a replica that protects data from loss.
        The requirements must be met collectively by the communication path and the
        replica.
    DockSpec:
      description: A backend is initialized by specific driver configuration. Each
        backend can be regarded as a docking service between SDS controller and storage
        service.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - driverName
        - endpoint
        - name
        - nodeId
        - status
        type: object
        properties:
          type:
            type: string
            enum:
            - provisioner
            - attacher
          name:
            type: string
          description:
            type: string
          storageType:
            description: The type of the storage. It can be either block, file or object
            example: block
            type: string
            enum:
            - block
            - file
            - object
          status:
            type: string
            enum:
            - available
            - unavailable
          driverName:
            type: string
            enum:
            - default
            - lvm
            - ceph
            - cinder
            - huawei_oceanstor_block
            - huawei_fusionstorage
          endpoint:
            type: string
            example: 0.0.0.0:50050
          nodeId:
            type: string
            example: 127.0.0.1
          metadata:
            type: object
            properties: {}
    StoragePoolSpec:
      description: A pool is discoveried and updated by a dock service. Each pool
        can be regarded as a physical storage pool or a virtual storage pool. It is
        a logical and atomic pool and can be abstracted from any storage platform.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      type: object
      properties:
          name:
            description: The name of the pool
            example: pool1
            minLength: 1
            maxLength: 255
            pattern: "[A-Za-z0-9_-]"
            type: string
          storageType:
            description: The type of storage. It can be either block, file or object
            example: block
            type: string
            enum:
            - block
            - file
            - object
          description:
            description: The description of the pool
            type: string
          multiAttach:
            default: true
            example: false
            description: can pool be attached to multiple hosts
            type: boolean
          status:
            description: The staus of the the pool
            example: available
            type: string
            enum:
            - available
            - unavailable
          availabilityZone:
            description: The zone of the the pool
            example: zone1
            type: string
            default: default
          totalCapacity:
            description: The total capacity of the pool in GB
            example: 20
            type: integer
            format: int64
          freeCapacity:
            description: The free capacity of the pool in GB
            example: 15
            type: integer
            format: int64
          consumedCapacity:
            description: The consumed capacity of the pool in GB
            example: 5
            type: integer
            format: int64
          dockId:
            type: string
            example: f4a5e666-c669-4c64-a2a1-8f9ecd560c78
            description: The id of dock, which connects to backend driver
          extras:
            $ref: '#/components/schemas/StoragePoolExtraSpec'
    StoragePoolExtraSpec:
      type: object
      properties:
        dataStorage:
          $ref: '#/components/schemas/DataStorageLoS'
        ioConnectivity:
          $ref: '#/components/schemas/IOConnectivityLoS'
        dataProtection:
          $ref: '#/components/schemas/DataProtectionLoS'
        customProperties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          example:
            key1: value1
            key2: false
            key3:
              key31: value31
      description: StoragePoolExtraSpec object represents the extra properties of
        the pool, such as supported capabilities.
    ProfileReqSpec:
      description: An OpenSDS profile is identified by a unique name and ID. With
        adding extra properties, each profile can contains a set of tags of storage
        capabilities which are desirable features for a class of applications.
      allOf:
      - required:
        - description
        - name
        - storageType
        type: object
        properties:
          name:
            description: The name of the profile
            minLength: 1
            maxLength: 255
            pattern: '[A-Za-z0-9_-]'
            type: string
            example: File_Profile
          storageType:
            description: The type of the storage. It can be either block, file or object
            example: block
            type: string
            enum:
            - block
            - file
            - object
          description:
            description: The description of the profile
            type: string
          provisioningProperties:
            $ref: '#/components/schemas/ProvisioningPropertiesSpec'
          replicationProperties:
            $ref: '#/components/schemas/ReplicationPropertiesSpec'
          snapshotProperties:
            $ref: '#/components/schemas/SnapshotPropertiesSpec'
          dataProtectionProperties:
            $ref: '#/components/schemas/DataProtectionPropertiesSpec'
          customProperties:
            $ref: '#/components/schemas/CustomPropertiesSpec'
    ProfileRespSpec:
      description: An OpenSDS profile is identified by a unique name and ID. With
        adding extra properties, each profile can contains a set of tags of storage
        capabilities which are desirable features for a class of applications.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      type: object
      properties:
          name:
            description: The name of the profile
            minLength: 1
            maxLength: 255
            pattern: '[A-Za-z0-9_-]'
            type: string
            example: File_Profile
          storageType:
            description: The type of the storage. It can be either block, file or object
            example: block
            type: string
            enum:
            - block
            - file
            - object
          description:
            description: The is description of the profile
            type: string
          provisioningProperties:
            $ref: '#/components/schemas/ProvisioningPropertiesSpec'
          replicationProperties:
            $ref: '#/components/schemas/ReplicationPropertiesSpec'
          snapshotProperties:
            $ref: '#/components/schemas/SnapshotPropertiesSpec'
          dataProtectionProperties:
            $ref: '#/components/schemas/DataProtectionPropertiesSpec'
          customProperties:
            $ref: '#/components/schemas/CustomPropertiesSpec'
    FileShareSpec:
      description: FileShare is a file system created by nfs southbound driver, it
        can be mounted on to physical machine or virtual machine instance.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - availabilityZone
        - name
        - profileId
        - size
        - tenantId
        type: object
        properties:
          tenantId:
            type: string
            readOnly: true
          userId:
            type: string
            readOnly: true
          name:
            type: string
          description:
            type: string
          size:
            type: integer
            format: int64
            example: 2
          availabilityZone:
            type: string
            default: default
          status:
            type: string
            readOnly: true
          profileId:
            type: string
          exportLocations:
            type: array
            readOnly: true
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: string
            readOnly: true
            example:
              lvPath: string
              nfsFileshareID: string
              nfsFileshareName: string
    FileShareSnapshotSpec:
      description: Snapshot is a description of fileshare snapshot resource.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - fileshareId
        - name
        - status
        - tenantId
        type: object
        properties:
          fileshareId:
            type: string
          tenantId:
            type: string
            readOnly: true
          userId:
            type: string
            readOnly: true
          name:
            type: string
          description:
            type: string
          status:
            type: string
            readOnly: true
          profileId:
            type: string
          metadata:
            type: object
            additionalProperties:
              type: string
            readOnly: true
            example:
              snapshotId: string
              snapshotName: string
              lvPath: string
    FileShareAclSpec:
      description: File Share Acl API describes the  acl of file share resource
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - accessCapability
        - accessTo
        - fileshareId
        - tenantId
        - type
        type: object
        properties:
          fileshareId:
            type: string
          type:
            type: string
          accessCapability:
            type: string
          accessTo:
            type: string
          tenantId:
            type: string
            readOnly: true
          userId:
            type: string
            readOnly: true
          name:
            type: string
          description:
            type: string
          status:
            type: string
            readOnly: true
          profileId:
            type: string
          metadata:
            type: object
            additionalProperties:
              type: string
            readOnly: true
            example:
              key1: value1
              key2: value2
    ProvisioningPropertiesSpec:
      type: object
      properties:
        dataStorage:
          $ref: '#/components/schemas/DataStorageLoS'
        ioConnectivity:
          $ref: '#/components/schemas/IOConnectivityLoS'
      description: ProvisioningPropertiesSpec represents some suggested properties
        for performing provisioning policies.
    ReplicationPropertiesSpec:
      type: object
      properties:
        dataProtection:
          $ref: '#/components/schemas/DataProtectionLoS'
        replicaInfos:
          type: object
          properties:
            replicaUpdateMode:
              description: It specify the replica update mode. It can be Active, Adaptive, Asynchronous, Synchronous
              example: Active
              type: string
              enum:
              - Active
              - Adaptive
              - Asynchronous
              - Synchronous
            replcationBandwidth:
              description: The bandwidth required for replication in MB
              example: 5
              type: integer
              format: int64
            replicationPeriod:
              description: It is an ISO 8601 interval that specify the required time for replication
              type: string
              example: P3Y6M4DT12H30M5S
            consistencyEnalbed:
              description: It specify the data consitency in replication
              default: false
              example: true
              type: boolean
      description: ReplicationPropertiesSpec represents some suggested properties
        for performing replication policies.
    SnapshotPropertiesSpec:
      type: object
      properties:
        schedule:
          type: object
          properties:
            datetime:
              example: "2019-09-07T07:02:35.389"
              type: string
              format: date-time
            occurrence:
              description: The occurence of snapshot creation
              example: daily
              type: string
              enum:
              - Daily
              - Weekly
              - Monthly
        retention:
          type: object
          properties:
            duration:
              description: The retention time of snapshot in days
              example: 15
              type: integer
              format: int64
            number:
              description: The number of snapshot at a particular time
              example: 10
              type: integer
              format: int64
        topology:
          type: object
          properties:
            bucket:

              type: string
      description: SnapshotPropertiesSpec represents some suggested properties for
        performing snapshot policies.
    DataProtectionPropertiesSpec:
      type: object
      properties:
        dataProtection:
          $ref: '#/components/schemas/DataProtectionLoS'
        consistencyEnalbed:
          description: It specify the data consitency in dataprotection
          default: false
          example: true
          type: boolean
      description: DataProtectionPropertiesSpec represents some suggested properties
        for performing data protection policies.
    CustomPropertiesSpec:
      type: object
      additionalProperties:
        type: object
        properties: {}
      description: CustomPropertiesSpec is a map of keys and JSON object that represents
        the customized properties of profile, such as requested capabilities including
        diskType, latency, deduplicaiton, compression and so forth.
      example:
        key1: value1
        key2: false
        key3:
          key31: value31
    VolumeReqSpec:
      description: Volume is an block device created by storage service, it can be
        attached to physical machine or virtual machine instance.
      allOf:
      - required:
        - name
        - size
        - tenantId
        type: object
        properties:
          tenantId:
            type: string
            example: e93b4c0934da416eb9c8d120c5d04d96
          userId:
            type: string
            example: e93b4c0934da416eb9c8d120c5d04d58
          name:
            description: The name of the volume
            minLength: 1
            maxLength: 255
            pattern: '[A-Za-z0-9_-]'
            type: string
            example: volume1
          multiAttach:
            type: boolean
            description: can this volume be attached to hosts
            example: true
            default: false
          description:
            type: string
            description: This is description for volume
          size:
            type: integer
            description: Requested size of volume in GB
            format: int64
            example: 20
          availabilityZone:
            type: string
            description: The name of availability zone
            example: zone1
            default: default
          profileId:
            type: string
            description: Id of profile, which describes storage capability policy
            example: adace15c-bcaa-42e3-8aa7-500070c802bc
            default: default_block
          poolId:
            type: string
            description: The id of the pool, on which volume need to be created
            example: cdefe15c-bcaa-42e3-8aa7-56070c802cd
            default: opensds-volumes-default
          snapshotId:
            type: string
            description: snapshotId is only required when user want to create volume
              from specific snapshot.
            example: bcace15c-bcaa-42e3-8aa7-400970c802cd
          groupId:
            type: string
            description: The id of the group
            example: bcace15c-bcaa-42e3-8aa7-400970c802er
          snapshotFromCloud:
            type: boolean
            description: The snapshot from the cloud
            example: true
          replicationId:
            type: string
            description: replicationId is only required when user want to create volume
              from specific replicated host.
            example: bcace15c-bcaa-42e3-8aa7-400970c802cd
          replicationDriverData:
            type: object
            additionalProperties:
              type: string
            example:
              key1: value1
              key2: value2
          provisioningPolicy:
            type: string
            description: The provisioning policy of volume
            example: thin
            default: thick
    VolumeRespSpec:
      description: Volume is an block device created by storage service, it can be
        attached to physical machine or virtual machine instance.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - type: object
        properties:
          tenantId:
            type: string
            example: e93b4c0934da416eb9c8d120c5d04d96
          userId:
            type: string
            example: e93b4c0934da416eb9c8d120c5d04d58
          name:
            description: The name of the volume
            minLength: 1
            maxLength: 255
            pattern: '[A-Za-z0-9_-]'
            type: string
            example: volume1
          multiAttach:
            type: boolean
            description: can this volume be attached to hosts
            example: true
            default: false
          description:
            type: string
            description: This is description of volume
          size:
            type: integer
            description: Requested size of volume in GB
            format: int64
            example: 20
          consumedCapacity:
            type: integer
            description: The consumed capacity
            format: int64
            example: 15
          freeCapacity:
            type: integer
            description: The available free capacity
            format: int64
            example: 5
          availabilityZone:
            type: string
            description: The name of availability zone
            example: zone1
            default: default
          status:
            type: string
            description: The current status of volume
            example: available
          profileId:
            type: string
            description: The id of the profile, which describes storage capability
              policy
            example: adace15c-bcaa-42e3-8aa7-500070c802bc
            default: default_block
          poolId:
            type: string
            description: The id of the pool, on which volume need to be created
            example: cdefe15c-bcaa-42e3-8aa7-56070c802cd
            default: opensds-volumes-default
          snapshotId:
            type: string
            description: The id of the snapshot, from which volume is created
            example: bcace15c-bcaa-42e3-8aa7-400970c802cd
          groupId:
            type: string
            description: The id of the group
          snapshotFromCloud:
            type: boolean
            description: The snapshot from cloud
          replicationId:
            type: string
            description: The id of the replication.
            example: bcace15c-bcaa-42e3-8aa7-400970c802cd
          replicationDriverData:
            type: object
            additionalProperties:
              type: string
            example:
              key1: value1
              key2: value2
          provisioningPolicy:
            type: string
            description: The provisioning policy of volume
            example: thin
            default: thick
          identifiers:
            type: string
            description: The unique id of backend volume
            example: 2:000:0090a5:0003f7
          metadata:
            type: object
            additionalProperties:
              type: string
            example:
              key1: value1
              key2: value2
    ExtendVolumeSpec:
      required:
      - newSize
      type: object
      properties:
        newSize:
          type: integer
          format: int64
          example: 2
      description: Extends the size of a volume to a requested size, in gibibytes
        (GiB).
    VolumeAttachmentReqSpec:
      description: Attachment is a description of volume attached resource.
      allOf:
      - required:
        - tenantId
        - volumeId
        type: object
        properties:
          tenantId:
            example: e93b4c0934da416eb9c8d120c5d04d96
            type: string
          userId:
            example: e93b4c0934da416eb9c8d120c5d04d67
            type: string
          attachMode:
            example: ro
            type: string
            enum:
            - rw
            - ro
            description: The volume to be attached in read-only or read-write mode
          hostId:
            default: local server
            example: e93b4c0934da416eb9c8d120c5d04d36
            description: The id of the host
            type: string
          connectionInfo:
            $ref: '#/components/schemas/ConnectionInfo'
          mountpoint:
            example: /dev/sda
            type: string
            description: The path where volume to be mounted
          volumeId:
            example: e93b4c0934da416eb9c8d120c5d04d45
            description: The id of volume, which to be attached
            type: string
    VolumeAttachmentRespSpec:
      description: Attachment is a description of volume attached resource.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      type: object
      properties:
          tenantId:
            example: e93b4c0934da416eb9c8d120c5d04d96
            type: string
          userId:
            example: e93b4c0934da416eb9c8d120c5d04d67
            type: string
          attachMode:
            example: ro
            description: The volume to be attached in read-only or read-write mode
            type: string
            enum:
            - rw
            - ro
          hostId:
            example: e93b4c0934da416eb9c8d120c5d04d36
            default: local server
            description: The id of the host
            type: string
          connectionInfo:
            $ref: '#/components/schemas/ConnectionInfo'
          mountpoint:
            example: /dev/sda
            type: string
            description: The path where volume is mounted
          status:
            example: available
            description: The status of attachment
            type: string
          volumeId:
            example: e93b4c0934da416eb9c8d120c5d04d45
            description: The id of volume, which is attached to host
            type: string
    ConnectionInfo:
      type: object
      properties:
        driverVolumeType:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
          example:
            key1: value1
            key2: false
            key3:
              key31: value31
        extraProperties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          example:
            key1: value1
            key2: false
            key3:
              key31: value31
      description: ConnectionInfo is a structure for all properties of connection
        when creating a volume attachment.
    VolumeSnapshotSpec:
      description: Snapshot is a description of volume snapshot resource.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - name
        - profileId
        - status
        - tenantId
        - volumeId
        type: object
        properties:
          tenantId:
            type: string
            readOnly: true
          userId:
            type: string
            readOnly: true
          name:
            type: string
          description:
            type: string
          size:
            type: integer
            format: int64
            readOnly: true
          status:
            type: string
            readOnly: true
          volumeId:
            type: string
          profileId:
            type: string
          metadata:
            type: object
            properties: {}
            example:
              key1: value1
              key2: value2
    VolumeGroupSpec:
      description: Volume group contains a list of volumes that are used in the same
        application.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - availabilityZone
        - description
        - name
        - profiles
        - status
        - tenantId
        type: object
        properties:
          tenantId:
            type: string
            readOnly: true
          userId:
            type: string
            readOnly: true
          name:
            type: string
            example: volumeGroup-demo
          description:
            type: string
            example: volume group test
          availabilityZone:
            type: string
            readOnly: true
            example: default
          status:
            type: string
            readOnly: true
          poolId:
            type: string
            readOnly: true
          profiles:
            type: array
            example:
            - 993c87dc-1928-498b-9767-9da8f901d6ce
            - 90d667f0-e9a9-427c-8a7f-cc714217c7bd
            items:
              type: string
    ReplicationSpec:
      description: Replication represents a replication relationship between the volumes
        on the primary and secondary sites.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - required:
        - availabilityZone
        - name
        - primaryVolumeId
        - profileId
        - replicationMode
        - replicationPeriod
        - tenantId
        type: object
        properties:
          tenantId:
            type: string
            readOnly: true
          userId:
            type: string
            readOnly: true
          name:
            type: string
            example: replication-demo
          description:
            type: string
            example: This is replication demo api specs
          availabilityZone:
            type: string
            example: default
          replicationStatus:
            type: string
            readOnly: true
            enum:
            - available
            - creating
            - deleting
            - enabling
            - disabling
            - failing_over
            - failing_back
            - error
            - error_deleting
            - error_enabling
            - error_disabling
            - error_failover
            - error_failback
            - enabled
            - disabled
            - failed_over
          primaryVolumeId:
            type: string
            example: 655ec3e2-5840-4138-b5bd-bce930d2acda
          secondaryVolumeId:
            type: string
            example: 8cfa9839-7fb8-4b16-ae7a-5eb7f2dafd0b
          primaryReplicationDriverData:
            type: object
            additionalProperties:
              type: string
            example:
              key1: value1
              key2: value2
          secondaryReplicationDriverData:
            type: object
            additionalProperties:
              type: string
            example:
              key1: value1
              key2: value2
          replicationMode:
            type: string
            enum:
            - sync
            - async
          replicationPeriod:
            minimum: 0
            type: integer
            format: int64
          profileId:
            type: string
            example: a66976e0-9fbf-4cf3-912a-e891dd41b1a5
    FailoverReplicationSpec:
      type: object
      properties:
        allowAttachedVolume:
          type: boolean
        secondaryBackendId:
          type: string
      description: FailoverReplicationSpec represents failover replication relationship
        between the volumes on the primary and secondary sites.
    ErrorSpec:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      description: Detailed HTTP error response, which consists of a HTTP status code,
        and a custom error message unique for each failure case.
    VersionSpec:
      required:
      - name
      - status
      - updated
      type: object
      properties:
        name:
          type: string
          example: v1beta
        status:
          type: string
          enum:
          - CURRENT
          - SUPPORTED
          - DEPRECATED
        updated:
          type: string
          format: date-time
          example:
            offset:
              totalSeconds: 0
              id: Z
              rules:
                fixedOffset: true
                transitions: []
                transitionRules: []
            dayOfYear: 100
            dayOfWeek: MONDAY
            month: APRIL
            dayOfMonth: 10
            year: 2017
            monthValue: 4
            nano: 14000000
            hour: 14
            minute: 36
            second: 58
      description: Lists information for all SDS controller API versions. An API version
        is a  string that consists of a 'v' + number, or 'v' + number + 'alpha'  or
        'beta' + number.
    HostReqSpec:
      required:
      - ip
      - name
      - profileId
      type: object
      properties:
        name:
          type: string
        profileId:
          type: string
        ip:
          type: string
          description: IP address of the host, mandatory
          example: 8.8.8.8
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Host access port
          format: int32
          example: 22
        username:
          minLength: 1
          maxLength: 255
          type: string
          description: username to access Host
          example: root
        password:
          minLength: 1
          maxLength: 1024
          type: string
          description: password to access Host
          example: password
        availabilityZone:
          type: string
        initiator:
          type: array
          description: Initiator of host
          items:
            type: object
            properties:
              port_name:
                minLength: 1
                maxLength: 255
                type: string
                description: Host initiator. Set the wwn, iSCSI type of the host whose
                  FC type is set to iqn of the host
                example: 20000024ff5bb888
              protocol:
                type: string
                description: Initiator type FC or iSCSI
                example: iSCSI
                enum:
                - iSCSI
                - FC
      description: Host is a consumer of volume from storage.
    HostRespSpec:
      required:
      - id
      - ip
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ip:
          type: string
      description: Host is a consumer of volume from storage.
    HostGroupReqSpec:
      required:
      - hosts
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Host group name
          example: hostgroup1
        hosts:
          type: array
          description: Host list. Mandatory
          items:
            type: object
            properties:
              hostId:
                minLength: 1
                maxLength: 64
                type: string
                description: Initiator type FC or iSCSI
                example: b862b332a-25fcd
      description: HostGroup is a collection of Hosts.
    HostGroupRespSpec:
      type: object
      properties:
        count:
          type: integer
          format: int32
          example: 1
        hostgroups:
          type: array
          description: HostGroup list. Mandatory
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the host group
                example: hostgroup1
              description:
                type: string
                description: Host group description
                example: hostgroup
              id:
                minLength: 1
                maxLength: 64
                type: string
                description: Host group id
                example: b862b332a-25fcd
              availabilityZone:
                type: string
                description: Host group availability zone
                example: host
              status:
                type: string
                description: Status of HostGroup
                example: NORMAL
                enum:
                - NORMAL
                - INUSE
                - MAPPING
                - UNMAPPING
      description: List of hosts.
  responses:
    HTTPStatus400:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus401:
      description: NotAuthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus404:
      description: The resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus500:
      description: An unexpected error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
  parameters:
    apiVersion:
      name: apiVersion
      in: path
      description: API version string
      required: true
      schema:
        pattern: v([1-9][0-9]*)((alpha)([1-9][0-9]*)|(beta)([1-9][0-9]*))?
        type: string
    tenantId:
      name: tenantId
      in: path
      description: The tenant UUID in a multi-tenancy environment.
      required: true
      schema:
        type: string
    dockId:
      name: dockId
      in: path
      description: The UUID of the storage backend (dock) service.
      required: true
      schema:
        type: string
    poolId:
      name: poolId
      in: path
      description: The UUID of the storage pool.
      required: true
      schema:
        type: string
    profileId:
      name: profileId
      in: path
      description: The UUID of the profile.
      required: true
      schema:
        type: string
    fileshareId:
      name: fileshareId
      in: path
      description: The UUID of the file share.
      required: true
      schema:
        type: string
    fileshareaclId:
      name: fileshareaclId
      in: path
      description: The UUID of the file share acl.
      required: true
      schema:
        type: string
    volumeId:
      name: volumeId
      in: path
      description: The UUID of the volume.
      required: true
      schema:
        type: string
    customKey:
      name: customKey
      in: path
      description: The key of the customized properties.
      required: true
      schema:
        type: string
    attachmentId:
      name: attachmentId
      in: path
      description: The UUID of the volume attachment.
      required: true
      schema:
        type: string
    snapshotId:
      name: snapshotId
      in: path
      description: The UUID of the volume snapshot.
      required: true
      schema:
        type: string
    shareSnapshotId:
      name: shareSnapshotId
      in: path
      description: The UUID of the fileshare snapshot.
      required: true
      schema:
        type: string
    volumeGroupId:
      name: volumeGroupId
      in: path
      description: The UUID of the volume group.
      required: true
      schema:
        type: string
    replicationId:
      name: replicationId
      in: path
      description: The UUID of the relication.
      required: true
      schema:
        type: string
    hostId:
      name: hostId
      in: path
      description: The UUID of the host.
      required: true
      schema:
        type: string
    hostgroupId:
      name: hostgroupId
      in: path
      description: The UUID of the hostgroup.
      required: true
      schema:
        type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
